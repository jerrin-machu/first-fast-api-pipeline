pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Create .env from Jenkins credentials') {
      steps {
        withCredentials([
          string(credentialsId: 'POSTGRES_USER_ID', variable: 'POSTGRES_USER'),
          string(credentialsId: 'POSTGRES_PASSWORD_ID', variable: 'POSTGRES_PASSWORD'),
          string(credentialsId: 'POSTGRES_DB_ID', variable: 'POSTGRES_DB'),
          string(credentialsId: 'DB_HOST_ID', variable: 'DB_HOST'),
          string(credentialsId: 'DB_PORT_ID', variable: 'DB_PORT')
        ]) {
          sh '''
umask 077
cat > .env <<EOF
# Auto-generated by Jenkins
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_DB=${POSTGRES_DB}
DB_HOST=${DB_HOST}
DB_PORT=${DB_PORT}
EOF
chmod 600 .env
          '''
        }
      }
    }

    stage('Deploy with Docker Compose') {
      steps {
        sh 'docker compose up -d --build'
      }
    }
  }

  post {
    always {
      sh 'rm -f .env'
    }
  }
}
